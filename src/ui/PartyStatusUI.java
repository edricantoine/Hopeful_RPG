package ui;

import model.PlayerCharacter;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

public class PartyStatusUI {
    private JPanel mainPanel;
    private JLabel jackLabel;
    private JLabel tripLabel;
    private JLabel boyleLabel;
    private JLabel ozzyLabel;
    private JButton OKButton;
    private List<PlayerCharacter> party;
    private List<JLabel> labs;

    public PartyStatusUI(List<PlayerCharacter> party, Color color) {
        JFrame frame = new JFrame("Party");
        labs = new ArrayList<>();
        this.party = party;
        mainPanel.setBackground(color);
        labs.add(jackLabel);
        labs.add(tripLabel);
        labs.add(boyleLabel);
        labs.add(ozzyLabel);
        initializeLabels();
        frame.setContentPane(mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        OKButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();
            }
        });
    }

    public void initializeLabels() {
        for (int i = 0; i < labs.size(); i++) {
            labs.get(i).setText("<html>Name: " + party.get(i).getName() + "<br/>" + "HP: " +
                    party.get(i).getHp() + "/" + party.get(i).getMaxhp() + "<br/>" +
                    "AP:" + party.get(i).getAp() + "/" + party.get(i).getMaxap() + "<br/>" +
                    "Status: " + party.get(i).getCurrentStatus() + "<br/>" +
                    "Attack modifier: " + party.get(i).getAtkMod() + "<br/>" +
                    "Damage taken modifier: " + party.get(i).getDefMod());
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        jackLabel = new JLabel();
        Font jackLabelFont = this.$$$getFont$$$("Courier New", -1, -1, jackLabel.getFont());
        if (jackLabelFont != null) jackLabel.setFont(jackLabelFont);
        jackLabel.setText("Label");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(jackLabel, gbc);
        tripLabel = new JLabel();
        Font tripLabelFont = this.$$$getFont$$$("Courier New", -1, -1, tripLabel.getFont());
        if (tripLabelFont != null) tripLabel.setFont(tripLabelFont);
        tripLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(tripLabel, gbc);
        boyleLabel = new JLabel();
        Font boyleLabelFont = this.$$$getFont$$$("Courier New", -1, -1, boyleLabel.getFont());
        if (boyleLabelFont != null) boyleLabel.setFont(boyleLabelFont);
        boyleLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(boyleLabel, gbc);
        ozzyLabel = new JLabel();
        Font ozzyLabelFont = this.$$$getFont$$$("Courier New", -1, -1, ozzyLabel.getFont());
        if (ozzyLabelFont != null) ozzyLabel.setFont(ozzyLabelFont);
        ozzyLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        mainPanel.add(ozzyLabel, gbc);
        OKButton = new JButton();
        Font OKButtonFont = this.$$$getFont$$$("Courier New", -1, -1, OKButton.getFont());
        if (OKButtonFont != null) OKButton.setFont(OKButtonFont);
        OKButton.setText("OK");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(OKButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
