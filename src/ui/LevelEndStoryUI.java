package ui;

import model.levelStuff.NewLevel;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class LevelEndStoryUI {
    private JPanel endPanel;
    private JButton okButton;
    private JLabel endLabel;

    public LevelEndStoryUI(NewLevel l) {
        endLabel.setText(l.getEndLabelText());
        JFrame frame = new JFrame("Story");
        frame.setContentPane(endPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        okButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Component cButton = (Component) e.getSource();
                SwingUtilities.getWindowAncestor(cButton).dispose();
                if (l.getName().equals("The Wasteland")) {
                    new LevelSelectUI(true, false, false);
                } else if (l.getName().equals("The Facility")) {
                    new LevelSelectUI(true, true, false);
                } else {
                    new LevelSelectUI(false, false, false);
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        endPanel = new JPanel();
        endPanel.setLayout(new GridBagLayout());
        endLabel = new JLabel();
        Font endLabelFont = this.$$$getFont$$$("Courier New", -1, -1, endLabel.getFont());
        if (endLabelFont != null) endLabel.setFont(endLabelFont);
        endLabel.setText("Label");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        endPanel.add(endLabel, gbc);
        okButton = new JButton();
        Font okButtonFont = this.$$$getFont$$$("Courier New", -1, -1, okButton.getFont());
        if (okButtonFont != null) okButton.setFont(okButtonFont);
        okButton.setText("OK");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        endPanel.add(okButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return endPanel;
    }

}
