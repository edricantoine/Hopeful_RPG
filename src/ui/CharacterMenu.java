package ui;

import model.Char;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

public class CharacterMenu {
    private JPanel cmPanel;
    private JLabel e1l;
    private JLabel e2l;
    private JLabel e3l;
    private JLabel e4l;
    private JLabel e5l;
    private JLabel e6l;
    private JLabel e7l;
    private JLabel e8l;
    private JButton backButton;
    private JLabel e9l;
    private List<JLabel> labs;
    private List<Char> chars;

    public CharacterMenu(List<Char> chars) {
        this.chars = chars;
        this.labs = new ArrayList<>();
        JFrame frame = new JFrame("Character Profiles");
        frame.setContentPane(cmPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        initializeLabels();
        frame.pack();
        frame.setVisible(true);
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Component cButton = (Component) e.getSource();
                SwingUtilities.getWindowAncestor(cButton).dispose();
                new SelectCharacterMenuArea();
            }
        });
    }

    public void initializeLabels() {
        labs.add(e1l);
        labs.add(e2l);
        labs.add(e3l);
        labs.add(e4l);
        labs.add(e5l);
        labs.add(e6l);
        labs.add(e7l);
        labs.add(e8l);
        labs.add(e9l);
        for (int i = 0; i < Math.min(chars.size(), labs.size()); i++) {
            labs.get(i).setText("<html>" + chars.get(i).getName() + " HP: " + chars.get(i).getMaxhp() + " AP: " +
                    chars.get(i).getMaxap() + " Speed: " + chars.get(i).getSpeed() + "<br/>"
                    + chars.get(i).getSkillsAsString() + "<br/>" +
                    chars.get(i).getFlavor() + "</html>");
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        cmPanel = new JPanel();
        cmPanel.setLayout(new GridBagLayout());
        cmPanel.setBackground(new Color(-4988956));
        e1l = new JLabel();
        Font e1lFont = this.$$$getFont$$$("Courier New", -1, -1, e1l.getFont());
        if (e1lFont != null) e1l.setFont(e1lFont);
        e1l.setText("");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e1l, gbc);
        e2l = new JLabel();
        Font e2lFont = this.$$$getFont$$$("Courier New", -1, -1, e2l.getFont());
        if (e2lFont != null) e2l.setFont(e2lFont);
        e2l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e2l, gbc);
        e3l = new JLabel();
        Font e3lFont = this.$$$getFont$$$("Courier New", -1, -1, e3l.getFont());
        if (e3lFont != null) e3l.setFont(e3lFont);
        e3l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e3l, gbc);
        e4l = new JLabel();
        Font e4lFont = this.$$$getFont$$$("Courier New", -1, -1, e4l.getFont());
        if (e4lFont != null) e4l.setFont(e4lFont);
        e4l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e4l, gbc);
        e5l = new JLabel();
        Font e5lFont = this.$$$getFont$$$("Courier New", -1, -1, e5l.getFont());
        if (e5lFont != null) e5l.setFont(e5lFont);
        e5l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e5l, gbc);
        e6l = new JLabel();
        Font e6lFont = this.$$$getFont$$$("Courier New", -1, -1, e6l.getFont());
        if (e6lFont != null) e6l.setFont(e6lFont);
        e6l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 10;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e6l, gbc);
        e7l = new JLabel();
        Font e7lFont = this.$$$getFont$$$("Courier New", -1, -1, e7l.getFont());
        if (e7lFont != null) e7l.setFont(e7lFont);
        e7l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 12;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e7l, gbc);
        e8l = new JLabel();
        Font e8lFont = this.$$$getFont$$$("Courier New", -1, -1, e8l.getFont());
        if (e8lFont != null) e8l.setFont(e8lFont);
        e8l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 14;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e8l, gbc);
        backButton = new JButton();
        Font backButtonFont = this.$$$getFont$$$("Courier New", -1, -1, backButton.getFont());
        if (backButtonFont != null) backButton.setFont(backButtonFont);
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 16;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(backButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 11;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 13;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer6, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        cmPanel.add(spacer7, gbc);
        e9l = new JLabel();
        e9l.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 15;
        gbc.anchor = GridBagConstraints.WEST;
        cmPanel.add(e9l, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return cmPanel;
    }

}
